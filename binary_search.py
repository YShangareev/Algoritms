# Бинарный поиск. Время выполнения O(log n)
# Создаем функцию бинарного поиска.
def binary_search(my_list, target):
    # Задаем начало и конец области поиска
    start = 0
    end = len(my_list) - 1
    # Создаем цикл, который повторяется пока условие истинно
    while start <= end:
        # Находим средний элемент списка
        mid = (start + end) // 2
        # Заносим средний элемент списка в массив
        guess = my_list[mid]
        # Создаем условие поиска
        if guess == target:
            # Возвращаем среднее значение, если оно совпадает с заданным числом
            return mid
        # Если заданное число больше среднего, продолжаем поиск
        elif target < guess:
            # Конец области поиска сдвигается до значения, предыдущего mid - значению
            end = mid - 1
        # Если заданное число меньше среднего, продолжаем поиск
        elif target > guess:
            # Начало области поиска сдвигается до значения, следующего за mid - значением
            start = mid + 1
    # Возвращается None, если элемента нет в списке
    return None
# Список значений
my_list = [i for i in range(1, 55)]
print(my_list)
# Выполнение функции с искомым индексом значения "54"
print(binary_search(my_list, 54))
